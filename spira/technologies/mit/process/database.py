from spira.yevon.process.all import *
from spira.yevon.process import get_rule_deck

RDD = get_rule_deck()

# --------------------------------- Metals --------------------------------------

RDD.L0 = ParameterDatabase()
RDD.L0.MIN_SIZE = 2.0 
RDD.L0.MAX_WIDTH = 20.0

RDD.M0 = ParameterDatabase()
RDD.M0.MIN_SIZE = 0.5
RDD.M0.MAX_WIDTH = 20.0
RDD.M0.LAYER = 0.0
RDD.M0.MIN_DENSITY = 15.0
RDD.M0.MAX_DENSITY = 85.0

RDD.M1 = ParameterDatabase()
RDD.M1.MIN_SIZE = 0.5
RDD.M1.MAX_WIDTH = 20.0
RDD.M1.LAYER = 10.0
RDD.M1.MIN_SPACE_TO_M1 = 0.5
RDD.M1.MIN_DENSITY = 15.0
RDD.M1.MAX_DENSITY = 80.0

RDD.M2 = ParameterDatabase()
RDD.M2.MIN_SIZE = 0.35
RDD.M2.MAX_WIDTH = 20.0
RDD.M2.LAYER = 20.0
RDD.M2.MIN_SPACE_TO_M2 =  0.5
RDD.M2.MIN_DENSITY = 15.0
RDD.M2.MAX_DENSITY = 80

RDD.M3 = ParameterDatabase()
RDD.M3.MIN_SIZE = 0.35
RDD.M3.MAX_WIDTH = 20.0
RDD.M3.LAYER = 30.0
RDD.M3.MIN_SPACE_TO_M3 =  0.5
RDD.M3.MIN_DENSITY = 15.0
RDD.M3.MAX_DENSITY = 80.0



RDD.M4 = ParameterDatabase()
RDD.M4.MIN_SIZE = 0.35
RDD.M4.MAX_WIDTH = 20.0
RDD.M4.I4_MIN_SURROUND = 0.3
RDD.M4.LAYER = 40.0
RDD.M4.MIN_SPACE_TO_M4 =  0.5
RDD.M4.MIN_DENSITY = 35.0
RDD.M4.MAX_DENSITY = 85.0

RDD.M5 = ParameterDatabase()
RDD.M5.MIN_SIZE = 0.7
RDD.M5.MAX_WIDTH = 20.0
RDD.M5.J5_MIN_SURROUND = 0.5
RDD.M5.MIN_SURROUND_OF_I5 = 0.5
RDD.M5.LAYER = 50.0
RDD.M5.MIN_SPACE_TO_M5 = 1
RDD.M5.MIN_DENSITY = 35.0
RDD.M5.MAX_DENSITY = 85.0

RDD.M6 = ParameterDatabase()
RDD.M6.MIN_SIZE = 0.5
RDD.M6.MAX_WIDTH = 20.0
RDD.M6.SPACING = 0.7
RDD.M6.I6_MIN_SURROUND = 0.5
RDD.M6.LAYER = 60.0
RDD.M6.MIN_SPACE_TO_M6 = 0.7
RDD.M6.MIN_DENSITY = 35.0
RDD.M6.MAX_DENSITY = 85.0

RDD.M7 = ParameterDatabase()
RDD.M7.MIN_SIZE = 0.5
RDD.M7.MAX_WIDTH = 20.0
RDD.M7.LAYER = 70.0
RDD.M7.MIN_SPACE_TO_M7 = 0.7
RDD.M7.MIN_DENSITY = 35.0
RDD.M7.MAX_DENSITY = 85.0

RDD.M8 = ParameterDatabase()
RDD.M8.MIN_SIZE = 10.0
RDD.M8.LAYER = 80.0
RDD.M8.MIN_SPACE_TO_M8 = 10

RDD.R5 = ParameterDatabase()
RDD.R5.MIN_SIZE = 0.5
RDD.R5.MAX_WIDTH = 5.0
RDD.R5.J5_MIN_SPACING = 0.4
RDD.R5.C5R_MIN_SURROUND = 0.35
RDD.R5.LAYER = 52.0
RDD.R5.MIN_SPACE_TO_R5 = 0.5
RDD.R5.MIN_DENSITY = 0.0
RDD.R5.MAX_DENSITY = 25.0
# --------------------------------- Vias ----------------------------------------

RDD.C0 = ParameterDatabase()
RDD.C0.MIN_SIZE = 0.7
RDD.C0.MAX_SIZE = 1.0
RDD.C0.M5_METAL = 1.0
RDD.C0.MIN_DENSITY = 0.0
RDD.C0.MAX_DENSITY = 25.0
RDD.C0.LAYER = 4

RDD.I0 = ParameterDatabase()
RDD.I0.MIN_SIZE = 0.6
RDD.I0.MAX_SIZE = 1.2
RDD.I0.M5_METAL = 1.0
RDD.I0.MIN_DENSITY = 0.0
RDD.I0.MAX_DENSITY = 25.0
RDD.I0.LAYER = 2

RDD.I1 = ParameterDatabase()
RDD.I1.MIN_SIZE = 0.6
RDD.I1.MAX_SIZE = 1.2
RDD.I1.M5_METAL = 1.0
RDD.I1.MIN_SPACE_TO_I1 = 0.7
RDD.I1.MIN_DENSITY = 0.0
RDD.I1.MAX_DENSITY = 25.0
RDD.I1.LAYER = 11

RDD.I2 = ParameterDatabase()
RDD.I2.WIDTH = 0.5
RDD.I2.MIN_SIZE = 0.6
RDD.I2.MAX_SIZE = 1.2
RDD.I2.M5_METAL = 1.0
RDD.I2.MIN_SPACE_TO_I2 = 0.7
RDD.I2.MIN_DENSITY = 0.0
RDD.I2.MAX_DENSITY = 25.0
RDD.I2.LAYER = 21

RDD.I3 = ParameterDatabase()
RDD.I3.MIN_SIZE = 0.6
RDD.I3.MAX_SIZE = 1.2
RDD.I3.M5_METAL = 1.0
RDD.I3.MIN_SPACE_TO_I3 = 0.7
RDD.I3.MIN_DENSITY = 0.0
RDD.I3.MAX_DENSITY = 25.0
RDD.I3.LAYER = 31

RDD.I4 = ParameterDatabase()
RDD.I4.MIN_SIZE = 0.8
RDD.I4.MAX_SIZE = 1.2
RDD.I4.M5_MIN_SURROUND = 0.3
RDD.I4.LAYER = 41.0
RDD.I4.MIN_SPACE_TO_I4 = 1
RDD.I4.MIN_DENSITY = 0
RDD.I4.MAX_DENSITY = 25.0

RDD.I5 = ParameterDatabase()
RDD.I5.MIN_SIZE = 0.7
RDD.I5.MAX_SIZE = 1.2
RDD.I5.M5_METAL = 1.0
RDD.I5.R5_MIN_SPACING = 0.5
RDD.I5.MIN_SURROUND_BY_M6 = 0.35
RDD.I5.LAYER = 54.0
RDD.I5.MIN_SPACE_TO_I5 = 0.7
RDD.I5.MIN_DENSITY = 0.0
RDD.I5.MAX_DENSITY = 25.0

RDD.J5 = ParameterDatabase()
RDD.J5.MIN_SIZE = 0.7
RDD.J5.MAX_SIZE = 3.0
RDD.J5.M5_METAL = 1.0
RDD.J5.M4_MIN_OVERLAP = 0.5
RDD.J5.C5J_MIN_SURROUND = 0.1
RDD.J5.I5_MIN_SPACING = 0.7
RDD.J5.LAYER = 51.0
RDD.J5.MIN_SPACE_TO_J5 = 1.1
RDD.J5.MIN_DENSITY = 5.0
RDD.J5.MAX_DENSITY = 20.0

RDD.I6 = ParameterDatabase()
RDD.I6.MIN_SIZE = 0.7
RDD.I6.M5_METAL = 1.0
RDD.I6.I5_MIN_SURROUND = 0.3
RDD.I6.M7_MIN_SURROUND = 0.35
RDD.I6.LAYER = 61.0
RDD.I6.MIN_SPACE_TO_I6 = 0.7


RDD.I7 = ParameterDatabase()
RDD.I7.MIN_SIZE = 5.0
RDD.I7.M5_METAL = 1.0
RDD.I7.MIN_SPACE_TO_I7 = 3

RDD.C5J = ParameterDatabase()
RDD.C5J.MIN_SIZE = 0.5
RDD.C5J.M6_MIN_SURROUND = 0.35

RDD.C5R = ParameterDatabase()
RDD.C5R.MIN_SIZE = 0.8
RDD.C5R.M5_METAL = 1.0
RDD.C5R.R5_MAX_SIDE_SURROUND = 0.2
RDD.C5R.R5_MIN_SURROUND = 0.35
RDD.C5R.M6_MIN_SURROUND = 0.35
RDD.C5R.I6_MIN_SPACE = 0.5

# ------------------------------- Physical Layers -------------------------------
RDD.PLAYER.M0 = PhysicalLayerDatabase()
RDD.PLAYER.M1 = PhysicalLayerDatabase()
RDD.PLAYER.M2 = PhysicalLayerDatabase()
RDD.PLAYER.M3 = PhysicalLayerDatabase()
RDD.PLAYER.M4 = PhysicalLayerDatabase()
RDD.PLAYER.M5 = PhysicalLayerDatabase()
RDD.PLAYER.M6 = PhysicalLayerDatabase()
RDD.PLAYER.M7 = PhysicalLayerDatabase()
RDD.PLAYER.R5 = PhysicalLayerDatabase()


RDD.PLAYER.METAL = PhysicalLayer(process=RDD.PROCESS.VIRTUAL, purpose=RDD.PURPOSE.METAL)
RDD.PLAYER.BBOX = PhysicalLayer(process=RDD.PROCESS.VIRTUAL, purpose=RDD.PURPOSE.BOUNDARY_BOX)
RDD.PLAYER.PORT = PhysicalLayer(process=RDD.PROCESS.VIRTUAL, purpose=RDD.PURPOSE.PORT.OUTSIDE_EDGE_DISABLED)
RDD.PLAYER.IXPORT = PhysicalLayer(process=RDD.PROCESS.PORT, purpose=RDD.PURPOSE.PORT.IXPORT)

RDD.PLAYER.M0.METAL = PhysicalLayer(name='M0', process=RDD.PROCESS.M0, purpose=RDD.PURPOSE.METAL)

RDD.PLAYER.M1.METAL = PhysicalLayer(name='M1', process=RDD.PROCESS.M1, purpose=RDD.PURPOSE.METAL)

RDD.PLAYER.M2.METAL = PhysicalLayer(name='M2', process=RDD.PROCESS.M2, purpose=RDD.PURPOSE.METAL)

RDD.PLAYER.M3.METAL = PhysicalLayer(name='M3', process=RDD.PROCESS.M3, purpose=RDD.PURPOSE.METAL)


RDD.PLAYER.M4.GND = PhysicalLayer(name='M4', process=RDD.PROCESS.M4, purpose=RDD.PURPOSE.GROUND)
RDD.PLAYER.M4.HOLE = PhysicalLayer(name='M4_HOLE', process=RDD.PROCESS.M4, purpose=RDD.PURPOSE.HOLE)
RDD.PLAYER.M4.BBOX = PhysicalLayer(name='M4_BBOX', process=RDD.PROCESS.M4, purpose=RDD.PURPOSE.BOUNDARY_BOX)
RDD.PLAYER.M4.PORT_CONTACT = PhysicalLayer(process=RDD.PROCESS.M4, purpose=RDD.PURPOSE.PORT.CONTACT)
RDD.PLAYER.M4.PORT_BRANCH = PhysicalLayer(process=RDD.PROCESS.M4, purpose=RDD.PURPOSE.PORT.BRANCH)
RDD.PLAYER.M4.PORT_DIRECTION = PhysicalLayer(process=RDD.PROCESS.M4, purpose=RDD.PURPOSE.PORT.DIRECTION)
RDD.PLAYER.M4.INSIDE_EDGE_ENABLED = PhysicalLayer(process=RDD.PROCESS.M4, purpose=RDD.PURPOSE.PORT.INSIDE_EDGE_ENABLED)
RDD.PLAYER.M4.INSIDE_EDGE_DISABLED = PhysicalLayer(process=RDD.PROCESS.M4, purpose=RDD.PURPOSE.PORT.INSIDE_EDGE_DISABLED)

RDD.PLAYER.M5.METAL = PhysicalLayer(name='M5', process=RDD.PROCESS.M5, purpose=RDD.PURPOSE.METAL)
RDD.PLAYER.M5.DEVICE_METAL = PhysicalLayer(name='M5', process=RDD.PROCESS.M5, purpose=RDD.PURPOSE.DEVICE_METAL)
RDD.PLAYER.M5.CIRCUIT_METAL = PhysicalLayer(name='M5', process=RDD.PROCESS.M5, purpose=RDD.PURPOSE.CIRCUIT_METAL)
RDD.PLAYER.M5.ROUTE = PhysicalLayer(name='M5_ROUTE', process=RDD.PROCESS.M5, purpose=RDD.PURPOSE.ROUTE)
RDD.PLAYER.M5.HOLE = PhysicalLayer(process=RDD.PROCESS.M5, purpose=RDD.PURPOSE.HOLE)
RDD.PLAYER.M5.BBOX = PhysicalLayer(process=RDD.PROCESS.M5, purpose=RDD.PURPOSE.BOUNDARY_BOX)
RDD.PLAYER.M5.PORT_CONTACT = PhysicalLayer(process=RDD.PROCESS.M5, purpose=RDD.PURPOSE.PORT.CONTACT)
RDD.PLAYER.M5.PORT_BRANCH = PhysicalLayer(process=RDD.PROCESS.M5, purpose=RDD.PURPOSE.PORT.BRANCH)
RDD.PLAYER.M5.PORT_PIN = PhysicalLayer(process=RDD.PROCESS.M5, purpose=RDD.PURPOSE.PORT.PIN)
RDD.PLAYER.M5.PORT_TERMINAL = PhysicalLayer(process=RDD.PROCESS.M5, purpose=RDD.PURPOSE.PORT.TERMINAL)
RDD.PLAYER.M5.PORT_DUMMY = PhysicalLayer(process=RDD.PROCESS.M5, purpose=RDD.PURPOSE.PORT.DUMMY)
RDD.PLAYER.M5.PORT_DIRECTION = PhysicalLayer(process=RDD.PROCESS.M5, purpose=RDD.PURPOSE.PORT.DIRECTION)
RDD.PLAYER.M5.INSIDE_EDGE_ENABLED = PhysicalLayer(process=RDD.PROCESS.M5, purpose=RDD.PURPOSE.PORT.INSIDE_EDGE_ENABLED)
RDD.PLAYER.M5.INSIDE_EDGE_DISABLED = PhysicalLayer(process=RDD.PROCESS.M5, purpose=RDD.PURPOSE.PORT.INSIDE_EDGE_DISABLED)
RDD.PLAYER.M5.OUTSIDE_EDGE_ENABLED = PhysicalLayer(process=RDD.PROCESS.M5, purpose=RDD.PURPOSE.PORT.OUTSIDE_EDGE_ENABLED)
RDD.PLAYER.M5.OUTSIDE_EDGE_DISABLED = PhysicalLayer(process=RDD.PROCESS.M5, purpose=RDD.PURPOSE.PORT.OUTSIDE_EDGE_DISABLED)

RDD.PLAYER.M6.METAL = PhysicalLayer(name='M6', process=RDD.PROCESS.M6, purpose=RDD.PURPOSE.METAL)
RDD.PLAYER.M6.DEVICE_METAL = PhysicalLayer(name='M6', process=RDD.PROCESS.M6, purpose=RDD.PURPOSE.DEVICE_METAL)
RDD.PLAYER.M6.CIRCUIT_METAL = PhysicalLayer(name='M6', process=RDD.PROCESS.M6, purpose=RDD.PURPOSE.CIRCUIT_METAL)
RDD.PLAYER.M6.ROUTE = PhysicalLayer(name='M6_ROUTE', process=RDD.PROCESS.M6, purpose=RDD.PURPOSE.ROUTE)
RDD.PLAYER.M6.HOLE = PhysicalLayer(process=RDD.PROCESS.M6, purpose=RDD.PURPOSE.HOLE)
RDD.PLAYER.M6.BBOX = PhysicalLayer(process=RDD.PROCESS.M6, purpose=RDD.PURPOSE.BOUNDARY_BOX)
RDD.PLAYER.M6.PORT_CONTACT = PhysicalLayer(process=RDD.PROCESS.M6, purpose=RDD.PURPOSE.PORT.CONTACT)
RDD.PLAYER.M6.PORT_BRANCH = PhysicalLayer(process=RDD.PROCESS.M6, purpose=RDD.PURPOSE.PORT.BRANCH)
RDD.PLAYER.M6.PORT_PIN = PhysicalLayer(process=RDD.PROCESS.M6, purpose=RDD.PURPOSE.PORT.PIN)
RDD.PLAYER.M6.PORT_TERMINAL = PhysicalLayer(process=RDD.PROCESS.M6, purpose=RDD.PURPOSE.PORT.TERMINAL)
RDD.PLAYER.M6.PORT_DUMMY = PhysicalLayer(process=RDD.PROCESS.M6, purpose=RDD.PURPOSE.PORT.DUMMY)
RDD.PLAYER.M6.PORT_DIRECTION = PhysicalLayer(process=RDD.PROCESS.M6, purpose=RDD.PURPOSE.PORT.DIRECTION)
RDD.PLAYER.M6.INSIDE_EDGE_ENABLED = PhysicalLayer(process=RDD.PROCESS.M6, purpose=RDD.PURPOSE.PORT.INSIDE_EDGE_ENABLED)
RDD.PLAYER.M6.INSIDE_EDGE_DISABLED = PhysicalLayer(process=RDD.PROCESS.M6, purpose=RDD.PURPOSE.PORT.INSIDE_EDGE_DISABLED)
RDD.PLAYER.M6.OUTSIDE_EDGE_ENABLED = PhysicalLayer(process=RDD.PROCESS.M6, purpose=RDD.PURPOSE.PORT.OUTSIDE_EDGE_ENABLED)
RDD.PLAYER.M6.OUTSIDE_EDGE_DISABLED = PhysicalLayer(process=RDD.PROCESS.M6, purpose=RDD.PURPOSE.PORT.OUTSIDE_EDGE_DISABLED)

RDD.PLAYER.M7.METAL = PhysicalLayer(name='M7', process=RDD.PROCESS.M7, purpose=RDD.PURPOSE.METAL)
RDD.PLAYER.M7.DEVICE_METAL = PhysicalLayer(name='M7', process=RDD.PROCESS.M7, purpose=RDD.PURPOSE.DEVICE_METAL)
RDD.PLAYER.M7.CIRCUIT_METAL = PhysicalLayer(name='M7', process=RDD.PROCESS.M7, purpose=RDD.PURPOSE.CIRCUIT_METAL)
RDD.PLAYER.M7.ROUTE = PhysicalLayer(name='M7_ROUTE', process=RDD.PROCESS.M7, purpose=RDD.PURPOSE.ROUTE)
RDD.PLAYER.M7.HOLE = PhysicalLayer(process=RDD.PROCESS.M7, purpose=RDD.PURPOSE.HOLE)
RDD.PLAYER.M7.BBOX = PhysicalLayer(process=RDD.PROCESS.M7, purpose=RDD.PURPOSE.BOUNDARY_BOX)
RDD.PLAYER.M7.PORT_CONTACT = PhysicalLayer(process=RDD.PROCESS.M7, purpose=RDD.PURPOSE.PORT.CONTACT)
RDD.PLAYER.M7.PORT_BRANCH = PhysicalLayer(process=RDD.PROCESS.M7, purpose=RDD.PURPOSE.PORT.BRANCH)
RDD.PLAYER.M7.PORT_DIRECTION = PhysicalLayer(process=RDD.PROCESS.M7, purpose=RDD.PURPOSE.PORT.DIRECTION)
RDD.PLAYER.M7.INSIDE_EDGE_ENABLED = PhysicalLayer(process=RDD.PROCESS.M7, purpose=RDD.PURPOSE.PORT.INSIDE_EDGE_ENABLED)
RDD.PLAYER.M7.INSIDE_EDGE_DISABLED = PhysicalLayer(process=RDD.PROCESS.M7, purpose=RDD.PURPOSE.PORT.INSIDE_EDGE_DISABLED)
RDD.PLAYER.M7.OUTSIDE_EDGE_ENABLED = PhysicalLayer(process=RDD.PROCESS.M7, purpose=RDD.PURPOSE.PORT.OUTSIDE_EDGE_ENABLED)
RDD.PLAYER.M7.OUTSIDE_EDGE_DISABLED = PhysicalLayer(process=RDD.PROCESS.M7, purpose=RDD.PURPOSE.PORT.OUTSIDE_EDGE_DISABLED)

RDD.PLAYER.R5.METAL = PhysicalLayer(name='R5', process=RDD.PROCESS.R5, purpose=RDD.PURPOSE.METAL)
RDD.PLAYER.R5.DEVICE_METAL = PhysicalLayer(name='R5', process=RDD.PROCESS.R5, purpose=RDD.PURPOSE.DEVICE_METAL)
RDD.PLAYER.R5.CIRCUIT_METAL = PhysicalLayer(name='R5', process=RDD.PROCESS.R5, purpose=RDD.PURPOSE.CIRCUIT_METAL)
RDD.PLAYER.R5.ROUTE = PhysicalLayer(name='R5_ROUTE', process=RDD.PROCESS.R5, purpose=RDD.PURPOSE.ROUTE)
RDD.PLAYER.R5.HOLE = PhysicalLayer(process=RDD.PROCESS.R5, purpose=RDD.PURPOSE.HOLE)
RDD.PLAYER.R5.BBOX = PhysicalLayer(process=RDD.PROCESS.R5, purpose=RDD.PURPOSE.BOUNDARY_BOX)
RDD.PLAYER.R5.PORT_CONTACT = PhysicalLayer(process=RDD.PROCESS.R5, purpose=RDD.PURPOSE.PORT.CONTACT)
RDD.PLAYER.R5.PORT_BRANCH = PhysicalLayer(process=RDD.PROCESS.R5, purpose=RDD.PURPOSE.PORT.BRANCH)
RDD.PLAYER.R5.PORT_DIRECTION = PhysicalLayer(process=RDD.PROCESS.R5, purpose=RDD.PURPOSE.PORT.DIRECTION)
RDD.PLAYER.R5.PORT_PIN = PhysicalLayer(process=RDD.PROCESS.R5, purpose=RDD.PURPOSE.PORT.PIN)
RDD.PLAYER.R5.PORT_TERMINAL = PhysicalLayer(process=RDD.PROCESS.R5, purpose=RDD.PURPOSE.PORT.TERMINAL)
RDD.PLAYER.R5.PORT_DUMMY = PhysicalLayer(process=RDD.PROCESS.R5, purpose=RDD.PURPOSE.PORT.DUMMY)
RDD.PLAYER.R5.INSIDE_EDGE_ENABLED = PhysicalLayer(process=RDD.PROCESS.R5, purpose=RDD.PURPOSE.PORT.INSIDE_EDGE_ENABLED)
RDD.PLAYER.R5.INSIDE_EDGE_DISABLED = PhysicalLayer(process=RDD.PROCESS.R5, purpose=RDD.PURPOSE.PORT.INSIDE_EDGE_DISABLED)
RDD.PLAYER.R5.OUTSIDE_EDGE_ENABLED = PhysicalLayer(process=RDD.PROCESS.R5, purpose=RDD.PURPOSE.PORT.OUTSIDE_EDGE_ENABLED)
RDD.PLAYER.R5.OUTSIDE_EDGE_DISABLED = PhysicalLayer(process=RDD.PROCESS.R5, purpose=RDD.PURPOSE.PORT.OUTSIDE_EDGE_DISABLED)

# ------------------------------- Derived Layers ----------------------------------

RDD.PLAYER.R5.EDGE_CONNECTED = RDD.PLAYER.R5.METAL & RDD.PLAYER.R5.OUTSIDE_EDGE_DISABLED
RDD.PLAYER.M5.EDGE_CONNECTED = RDD.PLAYER.M5.METAL & RDD.PLAYER.M5.OUTSIDE_EDGE_DISABLED
RDD.PLAYER.M6.EDGE_CONNECTED = RDD.PLAYER.M6.METAL & RDD.PLAYER.M6.OUTSIDE_EDGE_DISABLED

# ------------------------------- Physical Contacts ----------------------------------

RDD.PLAYER.J5 = PhysicalLayerDatabase()
RDD.PLAYER.C5J = PhysicalLayerDatabase()
RDD.PLAYER.C5R = PhysicalLayerDatabase()
RDD.PLAYER.I0 = PhysicalLayerDatabase()
RDD.PLAYER.I1 = PhysicalLayerDatabase()
RDD.PLAYER.I2 = PhysicalLayerDatabase()
RDD.PLAYER.I3 = PhysicalLayerDatabase()
RDD.PLAYER.I4 = PhysicalLayerDatabase()
RDD.PLAYER.I5 = PhysicalLayerDatabase()
RDD.PLAYER.I6 = PhysicalLayerDatabase()

RDD.PLAYER.J5.JUNCTION = PhysicalLayer(process=RDD.PROCESS.J5, purpose=RDD.PURPOSE.JUNCTION)
RDD.PLAYER.J5.UNION = PhysicalLayer(process=RDD.PROCESS.J5, purpose=RDD.PURPOSE.UNION)
RDD.PLAYER.J5.PORT_CONTACT = PhysicalLayer(process=RDD.PROCESS.J5, purpose=RDD.PURPOSE.PORT.CONTACT)
RDD.PLAYER.C5J.VIA = PhysicalLayer(name='C5J', process=RDD.PROCESS.C5J, purpose=RDD.PURPOSE.VIA)
RDD.PLAYER.C5R.VIA = PhysicalLayer(name='C5R', process=RDD.PROCESS.C5R, purpose=RDD.PURPOSE.VIA)
RDD.PLAYER.C5R.PORT_CONTACT = PhysicalLayer(process=RDD.PROCESS.C5R, purpose=RDD.PURPOSE.PORT.CONTACT)
RDD.PLAYER.C5R.UNION = PhysicalLayer(name='C5R', process=RDD.PROCESS.C5R, purpose=RDD.PURPOSE.UNION)

RDD.PLAYER.I0.VIA = PhysicalLayer(name='I0', process=RDD.PROCESS.I0, purpose=RDD.PURPOSE.VIA)
RDD.PLAYER.I0.PORT_CONTACT = PhysicalLayer(process=RDD.PROCESS.I0, purpose=RDD.PURPOSE.PORT.CONTACT)
RDD.PLAYER.I1.VIA = PhysicalLayer(name='I1', process=RDD.PROCESS.I1, purpose=RDD.PURPOSE.VIA)
RDD.PLAYER.I1.PORT_CONTACT = PhysicalLayer(process=RDD.PROCESS.I1, purpose=RDD.PURPOSE.PORT.CONTACT)
RDD.PLAYER.I2.VIA = PhysicalLayer(name='I2', process=RDD.PROCESS.I2, purpose=RDD.PURPOSE.VIA)
RDD.PLAYER.I2.PORT_CONTACT = PhysicalLayer(process=RDD.PROCESS.I2, purpose=RDD.PURPOSE.PORT.CONTACT)
RDD.PLAYER.I3.VIA = PhysicalLayer(name='I3', process=RDD.PROCESS.I3, purpose=RDD.PURPOSE.VIA)
RDD.PLAYER.I3.PORT_CONTACT = PhysicalLayer(process=RDD.PROCESS.I3, purpose=RDD.PURPOSE.PORT.CONTACT)
RDD.PLAYER.I4.VIA = PhysicalLayer(name='I4', process=RDD.PROCESS.I4, purpose=RDD.PURPOSE.VIA)
RDD.PLAYER.I4.PORT_CONTACT = PhysicalLayer(process=RDD.PROCESS.I4, purpose=RDD.PURPOSE.PORT.CONTACT)
RDD.PLAYER.I5.VIA = PhysicalLayer(process=RDD.PROCESS.I5, purpose=RDD.PURPOSE.VIA)
RDD.PLAYER.I5.PORT_CONTACT = PhysicalLayer(process=RDD.PROCESS.I5, purpose=RDD.PURPOSE.PORT.CONTACT)
RDD.PLAYER.I5.UNION = PhysicalLayer(process=RDD.PROCESS.I5, purpose=RDD.PURPOSE.UNION)
RDD.PLAYER.I5.DIFFERENCE = PhysicalLayer(process=RDD.PROCESS.I5, purpose=RDD.PURPOSE.DIFFERENCE)
RDD.PLAYER.I6.VIA = PhysicalLayer(name='I6', process=RDD.PROCESS.I6, purpose=RDD.PURPOSE.VIA)
RDD.PLAYER.I6.PORT_CONTACT = PhysicalLayer(process=RDD.PROCESS.I6, purpose=RDD.PURPOSE.PORT.CONTACT)

# ------------------------------ Map GDSII Layers -------------------------------

RDD.GDSII.PROCESS_LAYER_MAP = {
    RDD.PROCESS.PORT : 19,
    RDD.PROCESS.VIRTUAL : 199,
    RDD.PROCESS.GND : 0,
    RDD.PROCESS.R5 : 52,
    RDD.PROCESS.M0 : 1,
    RDD.PROCESS.M1 : 10,
    RDD.PROCESS.M2 : 20,
    RDD.PROCESS.M3 : 30,
    RDD.PROCESS.M4 : 40,
    RDD.PROCESS.M5 : 50,
    RDD.PROCESS.M6 : 60,
    RDD.PROCESS.M7 : 70,
    RDD.PROCESS.J5 : 51,
    RDD.PROCESS.C5R : 56,
    RDD.PROCESS.C5J : 55,
    RDD.PROCESS.CM1 : 11,
    RDD.PROCESS.CM2 : 21,
    RDD.PROCESS.CM3 : 31,
    RDD.PROCESS.I0 : 2,
    RDD.PROCESS.I1 : 11,
    RDD.PROCESS.I2 : 21,
    RDD.PROCESS.I3 : 31,
    RDD.PROCESS.I4 : 41,
    RDD.PROCESS.I5 : 54,
    RDD.PROCESS.I6 : 61,
    RDD.PROCESS.SKY : 99,
}

RDD.GDSII.PURPOSE_DATATYPE_MAP = {
    RDD.PURPOSE.GROUND : 0,
    RDD.PURPOSE.METAL : 0,
    RDD.PURPOSE.DEVICE_METAL : 100,
    RDD.PURPOSE.CIRCUIT_METAL : 101,
    RDD.PURPOSE.SKY : 3,
    RDD.PURPOSE.HOLE : 4,
    RDD.PURPOSE.BOUNDARY_BOX : 5,
    RDD.PURPOSE.PORT.DIRECTION : 6,
    RDD.PURPOSE.PORT.INSIDE_EDGE_ENABLED : 7,
    RDD.PURPOSE.PORT.INSIDE_EDGE_DISABLED : 8,
    RDD.PURPOSE.PORT.IXPORT : 0,
    RDD.PURPOSE.VIA : 0,
    RDD.PURPOSE.JUNCTION : 0,
    RDD.PURPOSE.ROUTE : 11,
    RDD.PURPOSE.INTERSECTED : 12,
    RDD.PURPOSE.UNION : 13,
    RDD.PURPOSE.DIFFERENCE : 14,
    RDD.PURPOSE.PORT.PIN : 15,
    RDD.PURPOSE.PORT.TERMINAL : 28,
    RDD.PURPOSE.PORT.EDGE : 16,
    RDD.PURPOSE.PORT.CONTACT : 17,
    RDD.PURPOSE.PORT.BRANCH : 18,
    RDD.PURPOSE.PORT.DUMMY : 19,
    RDD.PURPOSE.PORT.ROUTE : 26,
    RDD.PURPOSE.TEXT.PIN : 20,
    RDD.PURPOSE.TEXT.TERMINAL : 27,
    RDD.PURPOSE.TEXT.EDGE : 0,
    RDD.PURPOSE.TEXT.CONTACT : 0,
    RDD.PURPOSE.TEXT.ROUTE : 25,
    RDD.PURPOSE.TEXT.DUMMY : 26,
    RDD.PURPOSE.PORT.OUTSIDE_EDGE_ENABLED : 23,
    RDD.PURPOSE.PORT.OUTSIDE_EDGE_DISABLED : 24,
    RDD.PURPOSE.TEXT : 64,
}

RDD.GDSII.EXPORT_LAYER_MAP = MapPhysicalToGdsii(
    process_layer_map=RDD.GDSII.PROCESS_LAYER_MAP,
    purpose_datatype_map=RDD.GDSII.PURPOSE_DATATYPE_MAP
)

RDD.GDSII.IMPORT_LAYER_MAP = MapGdsiiToPhysical(
    process_layer_map=RDD.GDSII.PROCESS_LAYER_MAP,
    purpose_datatype_map=RDD.GDSII.PURPOSE_DATATYPE_MAP
)

# ------------------------------------- Virtual Modelling ----------------------------------------------

RDD.VMODEL = PhysicalLayerDatabase()

RDD.VMODEL.PROCESS_FLOW = VModelProcessFlow(
    active_processes=[
        RDD.PROCESS.M0,
        RDD.PROCESS.M1,
        RDD.PROCESS.M2,
        RDD.PROCESS.M3,
        RDD.PROCESS.M4,
        RDD.PROCESS.M5,
        RDD.PROCESS.M6,
        RDD.PROCESS.M7,
        RDD.PROCESS.R5,
        RDD.PROCESS.CM1,
        RDD.PROCESS.CM2,
        RDD.PROCESS.CM3,
        RDD.PROCESS.I0,
        RDD.PROCESS.I1,
        RDD.PROCESS.I2,
        RDD.PROCESS.I3,
        RDD.PROCESS.I4,
        RDD.PROCESS.I5,
        RDD.PROCESS.I6,
        RDD.PROCESS.C5R,
        RDD.PROCESS.C5J,
        RDD.PROCESS.J5,
        RDD.PROCESS.PORT
    ]
)

# ------------------------------------- Virtual Modelling ----------------------------------------------

RDD.VIAS = ParameterDatabase()

# --- ViaI5 ---

RDD.VIAS.I5 = ParameterDatabase()

RDD.VIAS.I5.LAYER_STACK = {
    'BOT_LAYER' : RDD.PLAYER.M5.METAL,
    'TOP_LAYER' : RDD.PLAYER.M6.METAL,
    'VIA_LAYER' : RDD.PLAYER.I5.VIA
}
RDD.PLAYER.I5.CLAYER_CONTACT = RDD.PLAYER.M5.METAL & RDD.PLAYER.M6.METAL & RDD.PLAYER.I5.VIA
RDD.PLAYER.I5.CLAYER_M1 = RDD.PLAYER.M5.METAL ^ RDD.PLAYER.I5.VIA
RDD.PLAYER.I5.CLAYER_M2 = RDD.PLAYER.M6.METAL ^ RDD.PLAYER.I5.VIA

class I5_PCELL_Database(LazyDatabase):
    def initialize(self):
        from ..devices.via import ViaI5
        self.DEFAULT = ViaI5

RDD.VIAS.I5.PCELLS = I5_PCELL_Database()

# --- ViaC5RA ---

RDD.VIAS.C5R = ParameterDatabase()

RDD.VIAS.C5R.LAYER_STACK = {
    'BOT_LAYER' : RDD.PLAYER.R5.METAL,
    'TOP_LAYER' : RDD.PLAYER.M6.METAL,
    'VIA_LAYER' : RDD.PLAYER.C5R.VIA
}
RDD.PLAYER.C5R.CLAYER_CONTACT = RDD.PLAYER.R5.METAL & RDD.PLAYER.M6.METAL & RDD.PLAYER.C5R.VIA
RDD.PLAYER.C5R.CLAYER_M1 = RDD.PLAYER.R5.METAL ^ RDD.PLAYER.C5R.VIA
RDD.PLAYER.C5R.CLAYER_M2 = RDD.PLAYER.M6.METAL ^ RDD.PLAYER.C5R.VIA

class C5R_PCELL_Database(LazyDatabase):
    def initialize(self):
        from ..devices.via import ViaC5RA, ViaC5RS
        self.DEFAULT = ViaC5RA
        self.STANDARD = ViaC5RS

RDD.VIAS.C5R.PCELLS = C5R_PCELL_Database()

# --- ViaJ5 ---

RDD.VIAS.J5 = ParameterDatabase()

RDD.VIAS.J5.LAYER_STACK = {
    'BOT_LAYER' : RDD.PLAYER.M5.METAL,
    'TOP_LAYER' : RDD.PLAYER.M6.METAL,
    'VIA_LAYER' : RDD.PLAYER.J5.JUNCTION
}
RDD.PLAYER.J5.CLAYER_CONTACT = RDD.PLAYER.M5.METAL & RDD.PLAYER.M6.METAL & RDD.PLAYER.J5.JUNCTION
RDD.PLAYER.J5.CLAYER_M1 = RDD.PLAYER.M5.METAL ^ RDD.PLAYER.J5.JUNCTION
RDD.PLAYER.J5.CLAYER_M2 = RDD.PLAYER.M6.METAL ^ RDD.PLAYER.J5.JUNCTION

class J5_PCELL_Database(LazyDatabase):
    def initialize(self):
        from ..devices.via import JJ
        self.DEFAULT = JJ

RDD.VIAS.J5.PCELLS = J5_PCELL_Database()


